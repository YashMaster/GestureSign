<UserControl x:Class="GestureSign.ControlPanel.MainWindowControls.AvailableGestures"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:localization="clr-namespace:GestureSign.Common.Localization;assembly=GestureSign.Common"
             xmlns:viewModel="clr-namespace:GestureSign.ControlPanel.ViewModel"
             xmlns:converters="clr-namespace:GestureSign.ControlPanel.Converters"
             mc:Ignorable="d"
             d:DesignHeight="400"
             d:DesignWidth="450"
             AllowDrop="True">
    <UserControl.Resources>
        <converters:GestureImageConverter x:Key="GestureImageConverter" />
        <converters:GestureGroupConverter x:Key="GestureGroupConverter" />
        <converters:GroupHeaderConverter x:Key="GroupHeaderConverter" />
        <ObjectDataProvider ObjectType="{x:Type viewModel:GestureItemProvider}"
                            x:Key="GestureItemProvider"
                            IsAsynchronous="True">
        </ObjectDataProvider>
        <CollectionViewSource x:Key="GestureViewSource"
                              Source="{Binding Source={StaticResource GestureItemProvider},Path=GestureItems}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Gesture"
                                          Converter="{StaticResource GestureGroupConverter}" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <ItemsPanelTemplate x:Key="IconPanelTemplate">
            <WrapPanel IsItemsHost="True" />
        </ItemsPanelTemplate>
        <DataTemplate x:Key="IconTemplate">
            <Grid Width="200"
                  Height="70">
                <Image Source="{Binding Path=Gesture.PointPatterns,Converter={StaticResource GestureImageConverter},ConverterParameter=60}"
                       Stretch="Uniform"
                       StretchDirection="DownOnly"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center" />
            </Grid>
        </DataTemplate>
        <GridView x:Key="GridView">
            <GridViewColumn Header="{localization:LocalisedText Gesture.Header}">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <Image Height="45"
                               MaxWidth="220"
                               Margin="5"
                               Stretch="Uniform"
                               StretchDirection="DownOnly"
                               Source="{Binding Path=Gesture.PointPatterns,Converter={StaticResource GestureImageConverter},ConverterParameter=45}" />
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Header="{localization:LocalisedText Gesture.Applications}"
                            DisplayMemberBinding="{Binding Path=Applications}" />
        </GridView>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="65" />
        </Grid.RowDefinitions>
        <ListView x:Name="lstAvailableGestures"
                  ItemsSource="{Binding Source={StaticResource GestureViewSource}}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  ScrollViewer.PanningMode="VerticalOnly"
                  SelectionChanged="lstAvailableGestures_SelectionChanged"
                  GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler"
                  BorderThickness="0"
                  SelectedValuePath="Gesture">
            <ListView.Style>
                <Style TargetType="ListView"
                       BasedOn="{StaticResource {x:Type ListView}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=LargeIconsMenuItem, Path=IsChecked}"
                                     Value="True">
                            <Setter Property="View"
                                    Value="{x:Null}" />
                            <Setter Property="ItemsPanel"
                                    Value="{DynamicResource IconPanelTemplate}" />
                            <Setter Property="ItemTemplate"
                                    Value="{StaticResource IconTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=DetailsMenuItem, Path=IsChecked}"
                                     Value="True">
                            <Setter Property="View"
                                    Value="{DynamicResource GridView}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.Style>
            <ListBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True"
                                                  Padding="0"
                                                  BorderThickness="0">
                                            <Expander.Header>
                                                <DockPanel>
                                                    <TextBlock Foreground="{StaticResource AccentSelectedColorBrush}"
                                                               Margin="5,0,0,0"
                                                               HorizontalAlignment="Center"
                                                               DockPanel.Dock="Top">
                                                        <TextBlock.Text>
                                                            <MultiBinding Converter="{StaticResource GroupHeaderConverter}">
                                                                <Binding  Path="Name"
                                                                          Mode="OneWay" />
                                                                <Binding  Path="ItemCount"
                                                                          Mode="OneWay" />
                                                            </MultiBinding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                </DockPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter />
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListBox.GroupStyle>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="ViewMenuItem"
                              Header="{localization:LocalisedText Gesture.View}"
                              FontSize="16">
                        <MenuItem x:Name="LargeIconsMenuItem"
                                  Header="{localization:LocalisedText Gesture.LargeIcons}"
                                  FontSize="16"
                                  IsCheckable="True"
                                  IsChecked="True"
                                  Click="ViewMenuItem_Click" />
                        <MenuItem x:Name="DetailsMenuItem"
                                  Header="{localization:LocalisedText Gesture.Details}"
                                  FontSize="16"
                                  IsCheckable="True"
                                  Click="ViewMenuItem_Click" />
                    </MenuItem>
                    <Separator />
                    <MenuItem x:Name="ImportGestureMenuItem"
                              Header="{localization:LocalisedText Gesture.ImportGesture}"
                              Click="ImportGestureMenuItem_Click"
                              FontSize="16" />
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.ItemContainerStyle>
                <!--disable-mouseover-effects-->
                <Style TargetType="{x:Type ListViewItem}"
                       BasedOn="{StaticResource {x:Type ListViewItem}}">
                    <EventSetter Event="MouseDoubleClick"
                                 Handler="ListViewItem_OnMouseDoubleClick" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border x:Name="Bd"
                                        Background="{TemplateBinding Background}"
                                        SnapsToDevicePixels="true">
                                    <Grid>
                                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <GridViewRowPresenter.Resources>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Foreground"
                                                            Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=Foreground}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                                                                     Value="True">
                                                            <Setter Property="Foreground"
                                                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                                                                     Value="False">
                                                            <Setter Property="Foreground"
                                                                    Value="{DynamicResource GrayNormalBrush}" />
                                                        </DataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                                                                           Value="False" />
                                                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                                                                           Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground"
                                                                        Value="{DynamicResource AccentSelectedColorBrush}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </GridViewRowPresenter.Resources>
                                        </GridViewRowPresenter>
                                        <ContentPresenter x:Name="contentPresenter"
                                                          Visibility="Collapsed"
                                                          Margin="{TemplateBinding Padding}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="GridView.ColumnCollection"
                                             Value="{x:Null}">
                                        <Setter TargetName="contentPresenter"
                                                Property="Visibility"
                                                Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="IsSelected"
                                             Value="true">
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource AccentSelectedColorBrush}" />
                                        <Setter TargetName="Bd"
                                                Property="Background"
                                                Value="{DynamicResource AccentColorBrush2}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsEnabled"
                                                       Value="False" />
                                            <Condition Property="IsSelected"
                                                       Value="True" />
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter TargetName="Bd"
                                                    Property="Background"
                                                    Value="{DynamicResource GrayBrush7}" />
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        <Button x:Name="btnDelGesture"
                Style="{DynamicResource MetroCircleButtonStyle}"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Height="50"
                Width="50"
                IsEnabled="False"
                Click="btnDelGesture_Click"
                Grid.Row="1"
                Margin="0,0,10,10">
            <Rectangle Width="18"
                       Height="20"
                       Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Visual="{StaticResource DeleteIcon}" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>
        <Button x:Name="btnEditGesture"
                Style="{DynamicResource MetroCircleButtonStyle}"
                Height="50"
                Width="50"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                IsEnabled="False"
                Click="btnEditGesture_Click"
                Grid.Row="1"
                Margin="0,0,65,10">
            <Rectangle Width="20"
                       Height="20"
                       Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Fill"
                                 Visual="{DynamicResource EditIcon}" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>
        <Button x:Name="ImportButton"
                Style="{DynamicResource MetroCircleButtonStyle}"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Height="50"
                Width="50"
                Margin="10,0,0,10"
                Grid.Row="1"
                Click="ImportGestureMenuItem_Click">
            <Rectangle Width="20"
                       Height="20"
                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Uniform"
                                 Visual="{StaticResource Import}">
                    </VisualBrush>
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>
    </Grid>
</UserControl>

